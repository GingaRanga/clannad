"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");!function(t){var e=jQuery.fn.jquery.split(" ")[0].split(".");if(e[0]<2&&e[1]<9||1==e[0]&&9==e[1]&&e[2]<1||e[0]>=4)throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}(),function(){function t(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var e,n,i,o,r,s,a,l,h,c,u,d,f,p,g,_,m,v,y,E,b,T,C,A,w,I,D,S,N,O,k,P,j,R,x,L,Q,H,M,W,B,V,U,K,F,G,Y,q,z,X,J,Z,$,tt,et,nt,it,ot,rt,st,at,lt,ht,ct,ut,dt,ft,pt,gt,_t,mt,vt,yt,Et,bt,Tt,Ct,At,wt,It,Dt,St,Nt,Ot,kt,Pt,jt,Rt,xt,Lt,Qt,Ht,Mt,Wt,Bt,Vt,Ut,Kt,Ft,Gt,Yt,qt,zt,Xt,Jt,Zt,$t,te,ee,ne,ie,oe,re,se,ae,le,he,ce,ue,de,fe,pe,ge,_e,me,ve,ye,Ee,be,Te,Ce,Ae="function"==typeof Symbol&&"symbol"==_typeof(Symbol.iterator)?function(t){return void 0===t?"undefined":_typeof(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":void 0===t?"undefined":_typeof(t)},we=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),Ie=function(t){var e=!1,n={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"},i={TRANSITION_END:"bsTransitionEnd",getUID:function(t){do{t+=~~(1e6*Math.random())}while(document.getElementById(t));return t},getSelectorFromElement:function(e){var n=e.getAttribute("data-target");n&&"#"!==n||(n=e.getAttribute("href")||"");try{return t(n).length>0?n:null}catch(t){return null}},reflow:function(t){return t.offsetHeight},triggerTransitionEnd:function(n){t(n).trigger(e.end)},supportsTransitionEnd:function(){return Boolean(e)},typeCheckConfig:function(t,e,n){for(var i in n)if(n.hasOwnProperty(i)){var o=n[i],r=e[i],s=r&&((l=r)[0]||l).nodeType?"element":(a=r,{}.toString.call(a).match(/\s([a-zA-Z]+)/)[1].toLowerCase());if(!new RegExp(o).test(s))throw new Error(t.toUpperCase()+': Option "'+i+'" provided type "'+s+'" but expected type "'+o+'".')}var a,l}};return e=function(){if(window.QUnit)return!1;var t=document.createElement("bootstrap");for(var e in n)if(void 0!==t.style[e])return{end:n[e]};return!1}(),t.fn.emulateTransitionEnd=function(e){var n=this,o=!1;return t(this).one(i.TRANSITION_END,function(){o=!0}),setTimeout(function(){o||i.triggerTransitionEnd(n)},e),this},i.supportsTransitionEnd()&&(t.event.special[i.TRANSITION_END]={bindType:e.end,delegateType:e.end,handle:function(e){if(t(e.target).is(this))return e.handleObj.handler.apply(this,arguments)}}),i}(jQuery),De=(ee=jQuery,ne="alert",ie=ee.fn[ne],oe="close.bs.alert",re="closed.bs.alert",se="click.bs.alert.data-api",ae="alert",le="fade",he="show",ce=function(){function e(n){t(this,e),this._element=n}return e.prototype.close=function(t){t=t||this._element;var e=this._getRootElement(t);this._triggerCloseEvent(e).isDefaultPrevented()||this._removeElement(e)},e.prototype.dispose=function(){ee.removeData(this._element,"bs.alert"),this._element=null},e.prototype._getRootElement=function(t){var e=Ie.getSelectorFromElement(t),n=!1;return e&&(n=ee(e)[0]),n||(n=ee(t).closest("."+ae)[0]),n},e.prototype._triggerCloseEvent=function(t){var e=ee.Event(oe);return ee(t).trigger(e),e},e.prototype._removeElement=function(t){var e=this;ee(t).removeClass(he),Ie.supportsTransitionEnd()&&ee(t).hasClass(le)?ee(t).one(Ie.TRANSITION_END,function(n){return e._destroyElement(t,n)}).emulateTransitionEnd(150):this._destroyElement(t)},e.prototype._destroyElement=function(t){ee(t).detach().trigger(re).remove()},e._jQueryInterface=function(t){return this.each(function(){var n=ee(this),i=n.data("bs.alert");i||(i=new e(this),n.data("bs.alert",i)),"close"===t&&i[t](this)})},e._handleDismiss=function(t){return function(e){e&&e.preventDefault(),t.close(this)}},we(e,null,[{key:"VERSION",get:function(){return"4.0.0-beta"}}]),e}(),ee(document).on(se,'[data-dismiss="alert"]',ce._handleDismiss(new ce)),ee.fn[ne]=ce._jQueryInterface,ee.fn[ne].Constructor=ce,ee.fn[ne].noConflict=function(){return ee.fn[ne]=ie,ce._jQueryInterface},Bt=jQuery,Vt="button",Ut=Bt.fn[Vt],Kt="active",Ft="btn",Gt="focus",Yt='[data-toggle^="button"]',qt='[data-toggle="buttons"]',zt="input",Xt=".active",Jt=".btn",Zt="click.bs.button.data-api",$t="focus.bs.button.data-api blur.bs.button.data-api",te=function(){function e(n){t(this,e),this._element=n}return e.prototype.toggle=function(){var t=!0,e=!0,n=Bt(this._element).closest(qt)[0];if(n){var i=Bt(this._element).find(zt)[0];if(i){if("radio"===i.type)if(i.checked&&Bt(this._element).hasClass(Kt))t=!1;else{var o=Bt(n).find(Xt)[0];o&&Bt(o).removeClass(Kt)}if(t){if(i.hasAttribute("disabled")||n.hasAttribute("disabled")||i.classList.contains("disabled")||n.classList.contains("disabled"))return;i.checked=!Bt(this._element).hasClass(Kt),Bt(i).trigger("change")}i.focus(),e=!1}}e&&this._element.setAttribute("aria-pressed",!Bt(this._element).hasClass(Kt)),t&&Bt(this._element).toggleClass(Kt)},e.prototype.dispose=function(){Bt.removeData(this._element,"bs.button"),this._element=null},e._jQueryInterface=function(t){return this.each(function(){var n=Bt(this).data("bs.button");n||(n=new e(this),Bt(this).data("bs.button",n)),"toggle"===t&&n[t]()})},we(e,null,[{key:"VERSION",get:function(){return"4.0.0-beta"}}]),e}(),Bt(document).on(Zt,Yt,function(t){t.preventDefault();var e=t.target;Bt(e).hasClass(Ft)||(e=Bt(e).closest(Jt)),te._jQueryInterface.call(Bt(e),"toggle")}).on($t,Yt,function(t){var e=Bt(t.target).closest(Jt)[0];Bt(e).toggleClass(Gt,/^focus(in)?$/.test(t.type))}),Bt.fn[Vt]=te._jQueryInterface,Bt.fn[Vt].Constructor=te,Bt.fn[Vt].noConflict=function(){return Bt.fn[Vt]=Ut,te._jQueryInterface},Et=jQuery,bt="carousel",Ct="."+(Tt="bs.carousel"),At=Et.fn[bt],wt={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0},It={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean"},Dt="next",St="prev",Nt="left",Ot="right",kt={SLIDE:"slide"+Ct,SLID:"slid"+Ct,KEYDOWN:"keydown"+Ct,MOUSEENTER:"mouseenter"+Ct,MOUSELEAVE:"mouseleave"+Ct,TOUCHEND:"touchend"+Ct,LOAD_DATA_API:"load.bs.carousel.data-api",CLICK_DATA_API:"click.bs.carousel.data-api"},Pt="carousel",jt="active",Rt="slide",xt="carousel-item-right",Lt="carousel-item-left",Qt="carousel-item-next",Ht="carousel-item-prev",Mt={ACTIVE:".active",ACTIVE_ITEM:".active.carousel-item",ITEM:".carousel-item",NEXT_PREV:".carousel-item-next, .carousel-item-prev",INDICATORS:".carousel-indicators",DATA_SLIDE:"[data-slide], [data-slide-to]",DATA_RIDE:'[data-ride="carousel"]'},Wt=function(){function e(n,i){t(this,e),this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this._config=this._getConfig(i),this._element=Et(n)[0],this._indicatorsElement=Et(this._element).find(Mt.INDICATORS)[0],this._addEventListeners()}return e.prototype.next=function(){this._isSliding||this._slide(Dt)},e.prototype.nextWhenVisible=function(){document.hidden||this.next()},e.prototype.prev=function(){this._isSliding||this._slide(St)},e.prototype.pause=function(t){t||(this._isPaused=!0),Et(this._element).find(Mt.NEXT_PREV)[0]&&Ie.supportsTransitionEnd()&&(Ie.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},e.prototype.cycle=function(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},e.prototype.to=function(t){var e=this;this._activeElement=Et(this._element).find(Mt.ACTIVE_ITEM)[0];var n=this._getItemIndex(this._activeElement);if(!(t>this._items.length-1||t<0))if(this._isSliding)Et(this._element).one(kt.SLID,function(){return e.to(t)});else{if(n===t)return this.pause(),void this.cycle();var i=t>n?Dt:St;this._slide(i,this._items[t])}},e.prototype.dispose=function(){Et(this._element).off(Ct),Et.removeData(this._element,Tt),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},e.prototype._getConfig=function(t){return t=Et.extend({},wt,t),Ie.typeCheckConfig(bt,t,It),t},e.prototype._addEventListeners=function(){var t=this;this._config.keyboard&&Et(this._element).on(kt.KEYDOWN,function(e){return t._keydown(e)}),"hover"===this._config.pause&&(Et(this._element).on(kt.MOUSEENTER,function(e){return t.pause(e)}).on(kt.MOUSELEAVE,function(e){return t.cycle(e)}),"ontouchstart"in document.documentElement&&Et(this._element).on(kt.TOUCHEND,function(){t.pause(),t.touchTimeout&&clearTimeout(t.touchTimeout),t.touchTimeout=setTimeout(function(e){return t.cycle(e)},500+t._config.interval)}))},e.prototype._keydown=function(t){if(!/input|textarea/i.test(t.target.tagName))switch(t.which){case 37:t.preventDefault(),this.prev();break;case 39:t.preventDefault(),this.next();break;default:return}},e.prototype._getItemIndex=function(t){return this._items=Et.makeArray(Et(t).parent().find(Mt.ITEM)),this._items.indexOf(t)},e.prototype._getItemByDirection=function(t,e){var n=t===Dt,i=t===St,o=this._getItemIndex(e),r=this._items.length-1;if((i&&0===o||n&&o===r)&&!this._config.wrap)return e;var s=(o+(t===St?-1:1))%this._items.length;return-1===s?this._items[this._items.length-1]:this._items[s]},e.prototype._triggerSlideEvent=function(t,e){var n=this._getItemIndex(t),i=this._getItemIndex(Et(this._element).find(Mt.ACTIVE_ITEM)[0]),o=Et.Event(kt.SLIDE,{relatedTarget:t,direction:e,from:i,to:n});return Et(this._element).trigger(o),o},e.prototype._setActiveIndicatorElement=function(t){if(this._indicatorsElement){Et(this._indicatorsElement).find(Mt.ACTIVE).removeClass(jt);var e=this._indicatorsElement.children[this._getItemIndex(t)];e&&Et(e).addClass(jt)}},e.prototype._slide=function(t,e){var n=this,i=Et(this._element).find(Mt.ACTIVE_ITEM)[0],o=this._getItemIndex(i),r=e||i&&this._getItemByDirection(t,i),s=this._getItemIndex(r),a=Boolean(this._interval),l=void 0,h=void 0,c=void 0;if(t===Dt?(l=Lt,h=Qt,c=Nt):(l=xt,h=Ht,c=Ot),r&&Et(r).hasClass(jt))this._isSliding=!1;else if(!this._triggerSlideEvent(r,c).isDefaultPrevented()&&i&&r){this._isSliding=!0,a&&this.pause(),this._setActiveIndicatorElement(r);var u=Et.Event(kt.SLID,{relatedTarget:r,direction:c,from:o,to:s});Ie.supportsTransitionEnd()&&Et(this._element).hasClass(Rt)?(Et(r).addClass(h),Ie.reflow(r),Et(i).addClass(l),Et(r).addClass(l),Et(i).one(Ie.TRANSITION_END,function(){Et(r).removeClass(l+" "+h).addClass(jt),Et(i).removeClass(jt+" "+h+" "+l),n._isSliding=!1,setTimeout(function(){return Et(n._element).trigger(u)},0)}).emulateTransitionEnd(600)):(Et(i).removeClass(jt),Et(r).addClass(jt),this._isSliding=!1,Et(this._element).trigger(u)),a&&this.cycle()}},e._jQueryInterface=function(t){return this.each(function(){var n=Et(this).data(Tt),i=Et.extend({},wt,Et(this).data());"object"===(void 0===t?"undefined":Ae(t))&&Et.extend(i,t);var o="string"==typeof t?t:i.slide;if(n||(n=new e(this,i),Et(this).data(Tt,n)),"number"==typeof t)n.to(t);else if("string"==typeof o){if(void 0===n[o])throw new Error('No method named "'+o+'"');n[o]()}else i.interval&&(n.pause(),n.cycle())})},e._dataApiClickHandler=function(t){var n=Ie.getSelectorFromElement(this);if(n){var i=Et(n)[0];if(i&&Et(i).hasClass(Pt)){var o=Et.extend({},Et(i).data(),Et(this).data()),r=this.getAttribute("data-slide-to");r&&(o.interval=!1),e._jQueryInterface.call(Et(i),o),r&&Et(i).data(Tt).to(r),t.preventDefault()}}},we(e,null,[{key:"VERSION",get:function(){return"4.0.0-beta"}},{key:"Default",get:function(){return wt}}]),e}(),Et(document).on(kt.CLICK_DATA_API,Mt.DATA_SLIDE,Wt._dataApiClickHandler),Et(window).on(kt.LOAD_DATA_API,function(){Et(Mt.DATA_RIDE).each(function(){var t=Et(this);Wt._jQueryInterface.call(t,t.data())})}),Et.fn[bt]=Wt._jQueryInterface,Et.fn[bt].Constructor=Wt,Et.fn[bt].noConflict=function(){return Et.fn[bt]=At,Wt._jQueryInterface},et=jQuery,nt="collapse",it="bs.collapse",ot=et.fn[nt],rt={toggle:!0,parent:""},st={toggle:"boolean",parent:"string"},at="show.bs.collapse",lt="shown.bs.collapse",ht="hide.bs.collapse",ct="hidden.bs.collapse",ut="click.bs.collapse.data-api",dt="show",ft="collapse",pt="collapsing",gt="collapsed",_t="width",mt="height",vt={ACTIVES:".show, .collapsing",DATA_TOGGLE:'[data-toggle="collapse"]'},yt=function(){function e(n,i){t(this,e),this._isTransitioning=!1,this._element=n,this._config=this._getConfig(i),this._triggerArray=et.makeArray(et('[data-toggle="collapse"][href="#'+n.id+'"],[data-toggle="collapse"][data-target="#'+n.id+'"]'));for(var o=et(vt.DATA_TOGGLE),r=0;r<o.length;r++){var s=o[r],a=Ie.getSelectorFromElement(s);null!==a&&et(a).filter(n).length>0&&this._triggerArray.push(s)}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}return e.prototype.toggle=function(){et(this._element).hasClass(dt)?this.hide():this.show()},e.prototype.show=function(){var t=this;if(!this._isTransitioning&&!et(this._element).hasClass(dt)){var n=void 0,i=void 0;if(this._parent&&((n=et.makeArray(et(this._parent).children().children(vt.ACTIVES))).length||(n=null)),!(n&&(i=et(n).data(it))&&i._isTransitioning)){var o=et.Event(at);if(et(this._element).trigger(o),!o.isDefaultPrevented()){n&&(e._jQueryInterface.call(et(n),"hide"),i||et(n).data(it,null));var r=this._getDimension();et(this._element).removeClass(ft).addClass(pt),this._element.style[r]=0,this._triggerArray.length&&et(this._triggerArray).removeClass(gt).attr("aria-expanded",!0),this.setTransitioning(!0);var s=function(){et(t._element).removeClass(pt).addClass(ft).addClass(dt),t._element.style[r]="",t.setTransitioning(!1),et(t._element).trigger(lt)};if(Ie.supportsTransitionEnd()){var a="scroll"+(r[0].toUpperCase()+r.slice(1));et(this._element).one(Ie.TRANSITION_END,s).emulateTransitionEnd(600),this._element.style[r]=this._element[a]+"px"}else s()}}}},e.prototype.hide=function(){var t=this;if(!this._isTransitioning&&et(this._element).hasClass(dt)){var e=et.Event(ht);if(et(this._element).trigger(e),!e.isDefaultPrevented()){var n=this._getDimension();if(this._element.style[n]=this._element.getBoundingClientRect()[n]+"px",Ie.reflow(this._element),et(this._element).addClass(pt).removeClass(ft).removeClass(dt),this._triggerArray.length)for(var i=0;i<this._triggerArray.length;i++){var o=this._triggerArray[i],r=Ie.getSelectorFromElement(o);null!==r&&(et(r).hasClass(dt)||et(o).addClass(gt).attr("aria-expanded",!1))}this.setTransitioning(!0);var s=function(){t.setTransitioning(!1),et(t._element).removeClass(pt).addClass(ft).trigger(ct)};this._element.style[n]="",Ie.supportsTransitionEnd()?et(this._element).one(Ie.TRANSITION_END,s).emulateTransitionEnd(600):s()}}},e.prototype.setTransitioning=function(t){this._isTransitioning=t},e.prototype.dispose=function(){et.removeData(this._element,it),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},e.prototype._getConfig=function(t){return(t=et.extend({},rt,t)).toggle=Boolean(t.toggle),Ie.typeCheckConfig(nt,t,st),t},e.prototype._getDimension=function(){return et(this._element).hasClass(_t)?_t:mt},e.prototype._getParent=function(){var t=this,n=et(this._config.parent)[0],i='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]';return et(n).find(i).each(function(n,i){t._addAriaAndCollapsedClass(e._getTargetFromElement(i),[i])}),n},e.prototype._addAriaAndCollapsedClass=function(t,e){if(t){var n=et(t).hasClass(dt);e.length&&et(e).toggleClass(gt,!n).attr("aria-expanded",n)}},e._getTargetFromElement=function(t){var e=Ie.getSelectorFromElement(t);return e?et(e)[0]:null},e._jQueryInterface=function(t){return this.each(function(){var n=et(this),i=n.data(it),o=et.extend({},rt,n.data(),"object"===(void 0===t?"undefined":Ae(t))&&t);if(!i&&o.toggle&&/show|hide/.test(t)&&(o.toggle=!1),i||(i=new e(this,o),n.data(it,i)),"string"==typeof t){if(void 0===i[t])throw new Error('No method named "'+t+'"');i[t]()}})},we(e,null,[{key:"VERSION",get:function(){return"4.0.0-beta"}},{key:"Default",get:function(){return rt}}]),e}(),et(document).on(ut,vt.DATA_TOGGLE,function(t){/input|textarea/i.test(t.target.tagName)||t.preventDefault();var e=et(this),n=Ie.getSelectorFromElement(this);et(n).each(function(){var t=et(this),n=t.data(it)?"toggle":e.data();yt._jQueryInterface.call(t,n)})}),et.fn[nt]=yt._jQueryInterface,et.fn[nt].Constructor=yt,et.fn[nt].noConflict=function(){return et.fn[nt]=ot,yt._jQueryInterface},function(e){if("undefined"==typeof Popper)throw new Error("Bootstrap dropdown require Popper.js (https://popper.js.org)");var n="dropdown",i="bs.dropdown",o="."+i,r=e.fn[n],s=new RegExp("38|40|27"),a={HIDE:"hide"+o,HIDDEN:"hidden"+o,SHOW:"show"+o,SHOWN:"shown"+o,CLICK:"click"+o,CLICK_DATA_API:"click.bs.dropdown.data-api",KEYDOWN_DATA_API:"keydown.bs.dropdown.data-api",KEYUP_DATA_API:"keyup.bs.dropdown.data-api"},l="disabled",h="show",c="dropup",u="dropdown-menu-right",d="dropdown-menu-left",f='[data-toggle="dropdown"]',p=".dropdown form",g=".dropdown-menu",_=".navbar-nav",m=".dropdown-menu .dropdown-item:not(.disabled)",v={TOP:"top-start",TOPEND:"top-end",BOTTOM:"bottom-start",BOTTOMEND:"bottom-end"},y={placement:v.BOTTOM,offset:0,flip:!0},E={placement:"string",offset:"(number|string)",flip:"boolean"},b=function(){function r(e,n){t(this,r),this._element=e,this._popper=null,this._config=this._getConfig(n),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}return r.prototype.toggle=function(){if(!this._element.disabled&&!e(this._element).hasClass(l)){var t=r._getParentFromElement(this._element),n=e(this._menu).hasClass(h);if(r._clearMenus(),!n){var i={relatedTarget:this._element},o=e.Event(a.SHOW,i);if(e(t).trigger(o),!o.isDefaultPrevented()){var s=this._element;e(t).hasClass(c)&&(e(this._menu).hasClass(d)||e(this._menu).hasClass(u))&&(s=t),this._popper=new Popper(s,this._menu,this._getPopperConfig()),"ontouchstart"in document.documentElement&&!e(t).closest(_).length&&e("body").children().on("mouseover",null,e.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),e(this._menu).toggleClass(h),e(t).toggleClass(h).trigger(e.Event(a.SHOWN,i))}}}},r.prototype.dispose=function(){e.removeData(this._element,i),e(this._element).off(o),this._element=null,this._menu=null,null!==this._popper&&this._popper.destroy(),this._popper=null},r.prototype.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},r.prototype._addEventListeners=function(){var t=this;e(this._element).on(a.CLICK,function(e){e.preventDefault(),e.stopPropagation(),t.toggle()})},r.prototype._getConfig=function(t){var i=e(this._element).data();return void 0!==i.placement&&(i.placement=v[i.placement.toUpperCase()]),t=e.extend({},this.constructor.Default,e(this._element).data(),t),Ie.typeCheckConfig(n,t,this.constructor.DefaultType),t},r.prototype._getMenuElement=function(){if(!this._menu){var t=r._getParentFromElement(this._element);this._menu=e(t).find(g)[0]}return this._menu},r.prototype._getPlacement=function(){var t=e(this._element).parent(),n=this._config.placement;return t.hasClass(c)||this._config.placement===v.TOP?(n=v.TOP,e(this._menu).hasClass(u)&&(n=v.TOPEND)):e(this._menu).hasClass(u)&&(n=v.BOTTOMEND),n},r.prototype._detectNavbar=function(){return e(this._element).closest(".navbar").length>0},r.prototype._getPopperConfig=function(){var t={placement:this._getPlacement(),modifiers:{offset:{offset:this._config.offset},flip:{enabled:this._config.flip}}};return this._inNavbar&&(t.modifiers.applyStyle={enabled:!this._inNavbar}),t},r._jQueryInterface=function(t){return this.each(function(){var n=e(this).data(i),o="object"===(void 0===t?"undefined":Ae(t))?t:null;if(n||(n=new r(this,o),e(this).data(i,n)),"string"==typeof t){if(void 0===n[t])throw new Error('No method named "'+t+'"');n[t]()}})},r._clearMenus=function(t){if(!t||3!==t.which&&("keyup"!==t.type||9===t.which))for(var n=e.makeArray(e(f)),o=0;o<n.length;o++){var s=r._getParentFromElement(n[o]),l=e(n[o]).data(i),c={relatedTarget:n[o]};if(l){var u=l._menu;if(e(s).hasClass(h)&&!(t&&("click"===t.type&&/input|textarea/i.test(t.target.tagName)||"keyup"===t.type&&9===t.which)&&e.contains(s,t.target))){var d=e.Event(a.HIDE,c);e(s).trigger(d),d.isDefaultPrevented()||("ontouchstart"in document.documentElement&&e("body").children().off("mouseover",null,e.noop),n[o].setAttribute("aria-expanded","false"),e(u).removeClass(h),e(s).removeClass(h).trigger(e.Event(a.HIDDEN,c)))}}}},r._getParentFromElement=function(t){var n=void 0,i=Ie.getSelectorFromElement(t);return i&&(n=e(i)[0]),n||t.parentNode},r._dataApiKeydownHandler=function(t){if(!(!s.test(t.which)||/button/i.test(t.target.tagName)&&32===t.which||/input|textarea/i.test(t.target.tagName)||(t.preventDefault(),t.stopPropagation(),this.disabled||e(this).hasClass(l)))){var n=r._getParentFromElement(this),i=e(n).hasClass(h);if((i||27===t.which&&32===t.which)&&(!i||27!==t.which&&32!==t.which)){var o=e(n).find(m).get();if(o.length){var a=o.indexOf(t.target);38===t.which&&a>0&&a--,40===t.which&&a<o.length-1&&a++,a<0&&(a=0),o[a].focus()}}else{if(27===t.which){var c=e(n).find(f)[0];e(c).trigger("focus")}e(this).trigger("click")}}},we(r,null,[{key:"VERSION",get:function(){return"4.0.0-beta"}},{key:"Default",get:function(){return y}},{key:"DefaultType",get:function(){return E}}]),r}();e(document).on(a.KEYDOWN_DATA_API,f,b._dataApiKeydownHandler).on(a.KEYDOWN_DATA_API,g,b._dataApiKeydownHandler).on(a.CLICK_DATA_API+" "+a.KEYUP_DATA_API,b._clearMenus).on(a.CLICK_DATA_API,f,function(t){t.preventDefault(),t.stopPropagation(),b._jQueryInterface.call(e(this),"toggle")}).on(a.CLICK_DATA_API,p,function(t){t.stopPropagation()}),e.fn[n]=b._jQueryInterface,e.fn[n].Constructor=b,e.fn[n].noConflict=function(){return e.fn[n]=r,b._jQueryInterface}}(jQuery),P=jQuery,j="modal",R=P.fn[j],x={backdrop:!0,keyboard:!0,focus:!0,show:!0},L={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},Q="hide.bs.modal",H="hidden.bs.modal",M="show.bs.modal",W="shown.bs.modal",B="focusin.bs.modal",V="resize.bs.modal",U="click.dismiss.bs.modal",K="keydown.dismiss.bs.modal",F="mouseup.dismiss.bs.modal",G="mousedown.dismiss.bs.modal",Y="click.bs.modal.data-api",q="modal-scrollbar-measure",z="modal-backdrop",X="modal-open",J="fade",Z="show",$={DIALOG:".modal-dialog",DATA_TOGGLE:'[data-toggle="modal"]',DATA_DISMISS:'[data-dismiss="modal"]',FIXED_CONTENT:".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",NAVBAR_TOGGLER:".navbar-toggler"},tt=function(){function e(n,i){t(this,e),this._config=this._getConfig(i),this._element=n,this._dialog=P(n).find($.DIALOG)[0],this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._originalBodyPadding=0,this._scrollbarWidth=0}return e.prototype.toggle=function(t){return this._isShown?this.hide():this.show(t)},e.prototype.show=function(t){var e=this;if(!this._isTransitioning){Ie.supportsTransitionEnd()&&P(this._element).hasClass(J)&&(this._isTransitioning=!0);var n=P.Event(M,{relatedTarget:t});P(this._element).trigger(n),this._isShown||n.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),P(document.body).addClass(X),this._setEscapeEvent(),this._setResizeEvent(),P(this._element).on(U,$.DATA_DISMISS,function(t){return e.hide(t)}),P(this._dialog).on(G,function(){P(e._element).one(F,function(t){P(t.target).is(e._element)&&(e._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return e._showElement(t)}))}},e.prototype.hide=function(t){var e=this;if(t&&t.preventDefault(),!this._isTransitioning&&this._isShown){var n=Ie.supportsTransitionEnd()&&P(this._element).hasClass(J);n&&(this._isTransitioning=!0);var i=P.Event(Q);P(this._element).trigger(i),this._isShown&&!i.isDefaultPrevented()&&(this._isShown=!1,this._setEscapeEvent(),this._setResizeEvent(),P(document).off(B),P(this._element).removeClass(Z),P(this._element).off(U),P(this._dialog).off(G),n?P(this._element).one(Ie.TRANSITION_END,function(t){return e._hideModal(t)}).emulateTransitionEnd(300):this._hideModal())}},e.prototype.dispose=function(){P.removeData(this._element,"bs.modal"),P(window,document,this._element,this._backdrop).off(".bs.modal"),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._scrollbarWidth=null},e.prototype.handleUpdate=function(){this._adjustDialog()},e.prototype._getConfig=function(t){return t=P.extend({},x,t),Ie.typeCheckConfig(j,t,L),t},e.prototype._showElement=function(t){var e=this,n=Ie.supportsTransitionEnd()&&P(this._element).hasClass(J);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.scrollTop=0,n&&Ie.reflow(this._element),P(this._element).addClass(Z),this._config.focus&&this._enforceFocus();var i=P.Event(W,{relatedTarget:t}),o=function(){e._config.focus&&e._element.focus(),e._isTransitioning=!1,P(e._element).trigger(i)};n?P(this._dialog).one(Ie.TRANSITION_END,o).emulateTransitionEnd(300):o()},e.prototype._enforceFocus=function(){var t=this;P(document).off(B).on(B,function(e){document===e.target||t._element===e.target||P(t._element).has(e.target).length||t._element.focus()})},e.prototype._setEscapeEvent=function(){var t=this;this._isShown&&this._config.keyboard?P(this._element).on(K,function(e){27===e.which&&(e.preventDefault(),t.hide())}):this._isShown||P(this._element).off(K)},e.prototype._setResizeEvent=function(){var t=this;this._isShown?P(window).on(V,function(e){return t.handleUpdate(e)}):P(window).off(V)},e.prototype._hideModal=function(){var t=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._isTransitioning=!1,this._showBackdrop(function(){P(document.body).removeClass(X),t._resetAdjustments(),t._resetScrollbar(),P(t._element).trigger(H)})},e.prototype._removeBackdrop=function(){this._backdrop&&(P(this._backdrop).remove(),this._backdrop=null)},e.prototype._showBackdrop=function(t){var e=this,n=P(this._element).hasClass(J)?J:"";if(this._isShown&&this._config.backdrop){var i=Ie.supportsTransitionEnd()&&n;if(this._backdrop=document.createElement("div"),this._backdrop.className=z,n&&P(this._backdrop).addClass(n),P(this._backdrop).appendTo(document.body),P(this._element).on(U,function(t){e._ignoreBackdropClick?e._ignoreBackdropClick=!1:t.target===t.currentTarget&&("static"===e._config.backdrop?e._element.focus():e.hide())}),i&&Ie.reflow(this._backdrop),P(this._backdrop).addClass(Z),!t)return;if(!i)return void t();P(this._backdrop).one(Ie.TRANSITION_END,t).emulateTransitionEnd(150)}else if(!this._isShown&&this._backdrop){P(this._backdrop).removeClass(Z);var o=function(){e._removeBackdrop(),t&&t()};Ie.supportsTransitionEnd()&&P(this._element).hasClass(J)?P(this._backdrop).one(Ie.TRANSITION_END,o).emulateTransitionEnd(150):o()}else t&&t()},e.prototype._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},e.prototype._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},e.prototype._checkScrollbar=function(){this._isBodyOverflowing=document.body.clientWidth<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},e.prototype._setScrollbar=function(){var t=this;if(this._isBodyOverflowing){P($.FIXED_CONTENT).each(function(e,n){var i=P(n)[0].style.paddingRight,o=P(n).css("padding-right");P(n).data("padding-right",i).css("padding-right",parseFloat(o)+t._scrollbarWidth+"px")}),P($.NAVBAR_TOGGLER).each(function(e,n){var i=P(n)[0].style.marginRight,o=P(n).css("margin-right");P(n).data("margin-right",i).css("margin-right",parseFloat(o)+t._scrollbarWidth+"px")});var e=document.body.style.paddingRight,n=P("body").css("padding-right");P("body").data("padding-right",e).css("padding-right",parseFloat(n)+this._scrollbarWidth+"px")}},e.prototype._resetScrollbar=function(){P($.FIXED_CONTENT).each(function(t,e){var n=P(e).data("padding-right");void 0!==n&&P(e).css("padding-right",n).removeData("padding-right")}),P($.NAVBAR_TOGGLER).each(function(t,e){var n=P(e).data("margin-right");void 0!==n&&P(e).css("margin-right",n).removeData("margin-right")});var t=P("body").data("padding-right");void 0!==t&&P("body").css("padding-right",t).removeData("padding-right")},e.prototype._getScrollbarWidth=function(){var t=document.createElement("div");t.className=q,document.body.appendChild(t);var e=t.getBoundingClientRect().width-t.clientWidth;return document.body.removeChild(t),e},e._jQueryInterface=function(t,n){return this.each(function(){var i=P(this).data("bs.modal"),o=P.extend({},e.Default,P(this).data(),"object"===(void 0===t?"undefined":Ae(t))&&t);if(i||(i=new e(this,o),P(this).data("bs.modal",i)),"string"==typeof t){if(void 0===i[t])throw new Error('No method named "'+t+'"');i[t](n)}else o.show&&i.show(n)})},we(e,null,[{key:"VERSION",get:function(){return"4.0.0-beta"}},{key:"Default",get:function(){return x}}]),e}(),P(document).on(Y,$.DATA_TOGGLE,function(t){var e=this,n=void 0,i=Ie.getSelectorFromElement(this);i&&(n=P(i)[0]);var o=P(n).data("bs.modal")?"toggle":P.extend({},P(n).data(),P(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||t.preventDefault();var r=P(n).one(M,function(t){t.isDefaultPrevented()||r.one(H,function(){P(e).is(":visible")&&e.focus()})});tt._jQueryInterface.call(P(n),o,this)}),P.fn[j]=tt._jQueryInterface,P.fn[j].Constructor=tt,P.fn[j].noConflict=function(){return P.fn[j]=R,tt._jQueryInterface},E=jQuery,b="scrollspy",T=E.fn[b],C={offset:10,method:"auto",target:""},A={offset:"number",method:"string",target:"(string|element)"},w={ACTIVATE:"activate.bs.scrollspy",SCROLL:"scroll.bs.scrollspy",LOAD_DATA_API:"load.bs.scrollspy.data-api"},I="dropdown-item",D="active",S={DATA_SPY:'[data-spy="scroll"]',ACTIVE:".active",NAV_LIST_GROUP:".nav, .list-group",NAV_LINKS:".nav-link",LIST_ITEMS:".list-group-item",DROPDOWN:".dropdown",DROPDOWN_ITEMS:".dropdown-item",DROPDOWN_TOGGLE:".dropdown-toggle"},N="offset",O="position",k=function(){function e(n,i){var o=this;t(this,e),this._element=n,this._scrollElement="BODY"===n.tagName?window:n,this._config=this._getConfig(i),this._selector=this._config.target+" "+S.NAV_LINKS+","+this._config.target+" "+S.LIST_ITEMS+","+this._config.target+" "+S.DROPDOWN_ITEMS,this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,E(this._scrollElement).on(w.SCROLL,function(t){return o._process(t)}),this.refresh(),this._process()}return e.prototype.refresh=function(){var t=this,e=this._scrollElement!==this._scrollElement.window?O:N,n="auto"===this._config.method?e:this._config.method,i=n===O?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),E.makeArray(E(this._selector)).map(function(t){var e=void 0,o=Ie.getSelectorFromElement(t);if(o&&(e=E(o)[0]),e){var r=e.getBoundingClientRect();if(r.width||r.height)return[E(e)[n]().top+i,o]}return null}).filter(function(t){return t}).sort(function(t,e){return t[0]-e[0]}).forEach(function(e){t._offsets.push(e[0]),t._targets.push(e[1])})},e.prototype.dispose=function(){E.removeData(this._element,"bs.scrollspy"),E(this._scrollElement).off(".bs.scrollspy"),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},e.prototype._getConfig=function(t){if("string"!=typeof(t=E.extend({},C,t)).target){var e=E(t.target).attr("id");e||(e=Ie.getUID(b),E(t.target).attr("id",e)),t.target="#"+e}return Ie.typeCheckConfig(b,t,A),t},e.prototype._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},e.prototype._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},e.prototype._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},e.prototype._process=function(){var t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),n=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),t>=n){var i=this._targets[this._targets.length-1];this._activeTarget!==i&&this._activate(i)}else{if(this._activeTarget&&t<this._offsets[0]&&this._offsets[0]>0)return this._activeTarget=null,void this._clear();for(var o=this._offsets.length;o--;)this._activeTarget!==this._targets[o]&&t>=this._offsets[o]&&(void 0===this._offsets[o+1]||t<this._offsets[o+1])&&this._activate(this._targets[o])}},e.prototype._activate=function(t){this._activeTarget=t,this._clear();var e=this._selector.split(",");e=e.map(function(e){return e+'[data-target="'+t+'"],'+e+'[href="'+t+'"]'});var n=E(e.join(","));n.hasClass(I)?(n.closest(S.DROPDOWN).find(S.DROPDOWN_TOGGLE).addClass(D),n.addClass(D)):(n.addClass(D),n.parents(S.NAV_LIST_GROUP).prev(S.NAV_LINKS+", "+S.LIST_ITEMS).addClass(D)),E(this._scrollElement).trigger(w.ACTIVATE,{relatedTarget:t})},e.prototype._clear=function(){E(this._selector).filter(S.ACTIVE).removeClass(D)},e._jQueryInterface=function(t){return this.each(function(){var n=E(this).data("bs.scrollspy"),i="object"===(void 0===t?"undefined":Ae(t))&&t;if(n||(n=new e(this,i),E(this).data("bs.scrollspy",n)),"string"==typeof t){if(void 0===n[t])throw new Error('No method named "'+t+'"');n[t]()}})},we(e,null,[{key:"VERSION",get:function(){return"4.0.0-beta"}},{key:"Default",get:function(){return C}}]),e}(),E(window).on(w.LOAD_DATA_API,function(){for(var t=E.makeArray(E(S.DATA_SPY)),e=t.length;e--;){var n=E(t[e]);k._jQueryInterface.call(n,n.data())}}),E.fn[b]=k._jQueryInterface,E.fn[b].Constructor=k,E.fn[b].noConflict=function(){return E.fn[b]=T,k._jQueryInterface},e=jQuery,n=e.fn.tab,i="hide.bs.tab",o="hidden.bs.tab",r="show.bs.tab",s="shown.bs.tab",a="click.bs.tab.data-api",l="dropdown-menu",h="active",c="disabled",u="fade",d="show",f=".dropdown",p=".nav, .list-group",g=".active",_='[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',m=".dropdown-toggle",v="> .dropdown-menu .active",y=function(){function n(e){t(this,n),this._element=e}return n.prototype.show=function(){var t=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&e(this._element).hasClass(h)||e(this._element).hasClass(c))){var n=void 0,a=void 0,l=e(this._element).closest(p)[0],u=Ie.getSelectorFromElement(this._element);l&&(a=(a=e.makeArray(e(l).find(g)))[a.length-1]);var d=e.Event(i,{relatedTarget:this._element}),f=e.Event(r,{relatedTarget:a});if(a&&e(a).trigger(d),e(this._element).trigger(f),!f.isDefaultPrevented()&&!d.isDefaultPrevented()){u&&(n=e(u)[0]),this._activate(this._element,l);var _=function(){var n=e.Event(o,{relatedTarget:t._element}),i=e.Event(s,{relatedTarget:a});e(a).trigger(n),e(t._element).trigger(i)};n?this._activate(n,n.parentNode,_):_()}}},n.prototype.dispose=function(){e.removeData(this._element,"bs.tab"),this._element=null},n.prototype._activate=function(t,n,i){var o=this,r=e(n).find(g)[0],s=i&&Ie.supportsTransitionEnd()&&r&&e(r).hasClass(u),a=function(){return o._transitionComplete(t,r,s,i)};r&&s?e(r).one(Ie.TRANSITION_END,a).emulateTransitionEnd(150):a(),r&&e(r).removeClass(d)},n.prototype._transitionComplete=function(t,n,i,o){if(n){e(n).removeClass(h);var r=e(n.parentNode).find(v)[0];r&&e(r).removeClass(h),n.setAttribute("aria-expanded",!1)}if(e(t).addClass(h),t.setAttribute("aria-expanded",!0),i?(Ie.reflow(t),e(t).addClass(d)):e(t).removeClass(u),t.parentNode&&e(t.parentNode).hasClass(l)){var s=e(t).closest(f)[0];s&&e(s).find(m).addClass(h),t.setAttribute("aria-expanded",!0)}o&&o()},n._jQueryInterface=function(t){return this.each(function(){var i=e(this),o=i.data("bs.tab");if(o||(o=new n(this),i.data("bs.tab",o)),"string"==typeof t){if(void 0===o[t])throw new Error('No method named "'+t+'"');o[t]()}})},we(n,null,[{key:"VERSION",get:function(){return"4.0.0-beta"}}]),n}(),e(document).on(a,_,function(t){t.preventDefault(),y._jQueryInterface.call(e(this),"show")}),e.fn.tab=y._jQueryInterface,e.fn.tab.Constructor=y,e.fn.tab.noConflict=function(){return e.fn.tab=n,y._jQueryInterface},function(e){if("undefined"==typeof Popper)throw new Error("Bootstrap tooltips require Popper.js (https://popper.js.org)");var n="tooltip",i=".bs.tooltip",o=e.fn[n],r=new RegExp("(^|\\s)bs-tooltip\\S+","g"),s={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)"},a={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"},l={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:0,container:!1,fallbackPlacement:"flip"},h="show",c="out",u={HIDE:"hide"+i,HIDDEN:"hidden"+i,SHOW:"show"+i,SHOWN:"shown"+i,INSERTED:"inserted"+i,CLICK:"click"+i,FOCUSIN:"focusin"+i,FOCUSOUT:"focusout"+i,MOUSEENTER:"mouseenter"+i,MOUSELEAVE:"mouseleave"+i},d="fade",f="show",p=".tooltip-inner",g=".arrow",_="hover",m="focus",v="click",y="manual",E=function(){function o(e,n){t(this,o),this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=e,this.config=this._getConfig(n),this.tip=null,this._setListeners()}return o.prototype.enable=function(){this._isEnabled=!0},o.prototype.disable=function(){this._isEnabled=!1},o.prototype.toggleEnabled=function(){this._isEnabled=!this._isEnabled},o.prototype.toggle=function(t){if(t){var n=this.constructor.DATA_KEY,i=e(t.currentTarget).data(n);i||(i=new this.constructor(t.currentTarget,this._getDelegateConfig()),e(t.currentTarget).data(n,i)),i._activeTrigger.click=!i._activeTrigger.click,i._isWithActiveTrigger()?i._enter(null,i):i._leave(null,i)}else{if(e(this.getTipElement()).hasClass(f))return void this._leave(null,this);this._enter(null,this)}},o.prototype.dispose=function(){clearTimeout(this._timeout),e.removeData(this.element,this.constructor.DATA_KEY),e(this.element).off(this.constructor.EVENT_KEY),e(this.element).closest(".modal").off("hide.bs.modal"),this.tip&&e(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,null!==this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},o.prototype.show=function(){var t=this;if("none"===e(this.element).css("display"))throw new Error("Please use show on visible elements");var n=e.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){e(this.element).trigger(n);var i=e.contains(this.element.ownerDocument.documentElement,this.element);if(n.isDefaultPrevented()||!i)return;var r=this.getTipElement(),s=Ie.getUID(this.constructor.NAME);r.setAttribute("id",s),this.element.setAttribute("aria-describedby",s),this.setContent(),this.config.animation&&e(r).addClass(d);var a="function"==typeof this.config.placement?this.config.placement.call(this,r,this.element):this.config.placement,l=this._getAttachment(a);this.addAttachmentClass(l);var h=!1===this.config.container?document.body:e(this.config.container);e(r).data(this.constructor.DATA_KEY,this),e.contains(this.element.ownerDocument.documentElement,this.tip)||e(r).appendTo(h),e(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new Popper(this.element,r,{placement:l,modifiers:{offset:{offset:this.config.offset},flip:{behavior:this.config.fallbackPlacement},arrow:{element:g}},onCreate:function(e){e.originalPlacement!==e.placement&&t._handlePopperPlacementChange(e)},onUpdate:function(e){t._handlePopperPlacementChange(e)}}),e(r).addClass(f),"ontouchstart"in document.documentElement&&e("body").children().on("mouseover",null,e.noop);var u=function(){t.config.animation&&t._fixTransition();var n=t._hoverState;t._hoverState=null,e(t.element).trigger(t.constructor.Event.SHOWN),n===c&&t._leave(null,t)};Ie.supportsTransitionEnd()&&e(this.tip).hasClass(d)?e(this.tip).one(Ie.TRANSITION_END,u).emulateTransitionEnd(o._TRANSITION_DURATION):u()}},o.prototype.hide=function(t){var n=this,i=this.getTipElement(),o=e.Event(this.constructor.Event.HIDE),r=function(){n._hoverState!==h&&i.parentNode&&i.parentNode.removeChild(i),n._cleanTipClass(),n.element.removeAttribute("aria-describedby"),e(n.element).trigger(n.constructor.Event.HIDDEN),null!==n._popper&&n._popper.destroy(),t&&t()};e(this.element).trigger(o),o.isDefaultPrevented()||(e(i).removeClass(f),"ontouchstart"in document.documentElement&&e("body").children().off("mouseover",null,e.noop),this._activeTrigger[v]=!1,this._activeTrigger[m]=!1,this._activeTrigger[_]=!1,Ie.supportsTransitionEnd()&&e(this.tip).hasClass(d)?e(i).one(Ie.TRANSITION_END,r).emulateTransitionEnd(150):r(),this._hoverState="")},o.prototype.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},o.prototype.isWithContent=function(){return Boolean(this.getTitle())},o.prototype.addAttachmentClass=function(t){e(this.getTipElement()).addClass("bs-tooltip-"+t)},o.prototype.getTipElement=function(){return this.tip=this.tip||e(this.config.template)[0]},o.prototype.setContent=function(){var t=e(this.getTipElement());this.setElementContent(t.find(p),this.getTitle()),t.removeClass(d+" "+f)},o.prototype.setElementContent=function(t,n){var i=this.config.html;"object"===(void 0===n?"undefined":Ae(n))&&(n.nodeType||n.jquery)?i?e(n).parent().is(t)||t.empty().append(n):t.text(e(n).text()):t[i?"html":"text"](n)},o.prototype.getTitle=function(){var t=this.element.getAttribute("data-original-title");return t||(t="function"==typeof this.config.title?this.config.title.call(this.element):this.config.title),t},o.prototype._getAttachment=function(t){return a[t.toUpperCase()]},o.prototype._setListeners=function(){var t=this;this.config.trigger.split(" ").forEach(function(n){if("click"===n)e(t.element).on(t.constructor.Event.CLICK,t.config.selector,function(e){return t.toggle(e)});else if(n!==y){var i=n===_?t.constructor.Event.MOUSEENTER:t.constructor.Event.FOCUSIN,o=n===_?t.constructor.Event.MOUSELEAVE:t.constructor.Event.FOCUSOUT;e(t.element).on(i,t.config.selector,function(e){return t._enter(e)}).on(o,t.config.selector,function(e){return t._leave(e)})}e(t.element).closest(".modal").on("hide.bs.modal",function(){return t.hide()})}),this.config.selector?this.config=e.extend({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},o.prototype._fixTitle=function(){var t=Ae(this.element.getAttribute("data-original-title"));(this.element.getAttribute("title")||"string"!==t)&&(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},o.prototype._enter=function(t,n){var i=this.constructor.DATA_KEY;(n=n||e(t.currentTarget).data(i))||(n=new this.constructor(t.currentTarget,this._getDelegateConfig()),e(t.currentTarget).data(i,n)),t&&(n._activeTrigger["focusin"===t.type?m:_]=!0),e(n.getTipElement()).hasClass(f)||n._hoverState===h?n._hoverState=h:(clearTimeout(n._timeout),n._hoverState=h,n.config.delay&&n.config.delay.show?n._timeout=setTimeout(function(){n._hoverState===h&&n.show()},n.config.delay.show):n.show())},o.prototype._leave=function(t,n){var i=this.constructor.DATA_KEY;(n=n||e(t.currentTarget).data(i))||(n=new this.constructor(t.currentTarget,this._getDelegateConfig()),e(t.currentTarget).data(i,n)),t&&(n._activeTrigger["focusout"===t.type?m:_]=!1),n._isWithActiveTrigger()||(clearTimeout(n._timeout),n._hoverState=c,n.config.delay&&n.config.delay.hide?n._timeout=setTimeout(function(){n._hoverState===c&&n.hide()},n.config.delay.hide):n.hide())},o.prototype._isWithActiveTrigger=function(){for(var t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1},o.prototype._getConfig=function(t){return(t=e.extend({},this.constructor.Default,e(this.element).data(),t)).delay&&"number"==typeof t.delay&&(t.delay={show:t.delay,hide:t.delay}),t.title&&"number"==typeof t.title&&(t.title=t.title.toString()),t.content&&"number"==typeof t.content&&(t.content=t.content.toString()),Ie.typeCheckConfig(n,t,this.constructor.DefaultType),t},o.prototype._getDelegateConfig=function(){var t={};if(this.config)for(var e in this.config)this.constructor.Default[e]!==this.config[e]&&(t[e]=this.config[e]);return t},o.prototype._cleanTipClass=function(){var t=e(this.getTipElement()),n=t.attr("class").match(r);null!==n&&n.length>0&&t.removeClass(n.join(""))},o.prototype._handlePopperPlacementChange=function(t){this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(t.placement))},o.prototype._fixTransition=function(){var t=this.getTipElement(),n=this.config.animation;null===t.getAttribute("x-placement")&&(e(t).removeClass(d),this.config.animation=!1,this.hide(),this.show(),this.config.animation=n)},o._jQueryInterface=function(t){return this.each(function(){var n=e(this).data("bs.tooltip"),i="object"===(void 0===t?"undefined":Ae(t))&&t;if((n||!/dispose|hide/.test(t))&&(n||(n=new o(this,i),e(this).data("bs.tooltip",n)),"string"==typeof t)){if(void 0===n[t])throw new Error('No method named "'+t+'"');n[t]()}})},we(o,null,[{key:"VERSION",get:function(){return"4.0.0-beta"}},{key:"Default",get:function(){return l}},{key:"NAME",get:function(){return n}},{key:"DATA_KEY",get:function(){return"bs.tooltip"}},{key:"Event",get:function(){return u}},{key:"EVENT_KEY",get:function(){return i}},{key:"DefaultType",get:function(){return s}}]),o}();return e.fn[n]=E._jQueryInterface,e.fn[n].Constructor=E,e.fn[n].noConflict=function(){return e.fn[n]=o,E._jQueryInterface},E}(jQuery));ue=jQuery,de="popover",fe=".bs.popover",pe=ue.fn[de],ge=new RegExp("(^|\\s)bs-popover\\S+","g"),_e=ue.extend({},De.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),me=ue.extend({},De.DefaultType,{content:"(string|element|function)"}),ve="fade",ye="show",Ee=".popover-header",be=".popover-body",Te={HIDE:"hide"+fe,HIDDEN:"hidden"+fe,SHOW:"show"+fe,SHOWN:"shown"+fe,INSERTED:"inserted"+fe,CLICK:"click"+fe,FOCUSIN:"focusin"+fe,FOCUSOUT:"focusout"+fe,MOUSEENTER:"mouseenter"+fe,MOUSELEAVE:"mouseleave"+fe},Ce=function(e){function n(){return t(this,n),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=(void 0===e?"undefined":_typeof(e))&&"function"!=typeof e?t:e}(this,e.apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+(void 0===e?"undefined":_typeof(e)));t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(n,e),n.prototype.isWithContent=function(){return this.getTitle()||this._getContent()},n.prototype.addAttachmentClass=function(t){ue(this.getTipElement()).addClass("bs-popover-"+t)},n.prototype.getTipElement=function(){return this.tip=this.tip||ue(this.config.template)[0]},n.prototype.setContent=function(){var t=ue(this.getTipElement());this.setElementContent(t.find(Ee),this.getTitle()),this.setElementContent(t.find(be),this._getContent()),t.removeClass(ve+" "+ye)},n.prototype._getContent=function(){return this.element.getAttribute("data-content")||("function"==typeof this.config.content?this.config.content.call(this.element):this.config.content)},n.prototype._cleanTipClass=function(){var t=ue(this.getTipElement()),e=t.attr("class").match(ge);null!==e&&e.length>0&&t.removeClass(e.join(""))},n._jQueryInterface=function(t){return this.each(function(){var e=ue(this).data("bs.popover"),i="object"===(void 0===t?"undefined":Ae(t))?t:null;if((e||!/destroy|hide/.test(t))&&(e||(e=new n(this,i),ue(this).data("bs.popover",e)),"string"==typeof t)){if(void 0===e[t])throw new Error('No method named "'+t+'"');e[t]()}})},we(n,null,[{key:"VERSION",get:function(){return"4.0.0-beta"}},{key:"Default",get:function(){return _e}},{key:"NAME",get:function(){return de}},{key:"DATA_KEY",get:function(){return"bs.popover"}},{key:"Event",get:function(){return Te}},{key:"EVENT_KEY",get:function(){return fe}},{key:"DefaultType",get:function(){return me}}]),n}(De),ue.fn[de]=Ce._jQueryInterface,ue.fn[de].Constructor=Ce,ue.fn[de].noConflict=function(){return ue.fn[de]=pe,Ce._jQueryInterface}}();
"use strict";$(document).ready(function(){$(".service-slide").slick({infinite:!0,slidesToShow:4,slidesToScroll:1,autoplay:!0,autoplaySpeed:2e3,dots:!0,arrows:!1,responsive:[{breakpoint:1024,settings:{slidesToShow:3,slidesToScroll:3,infinite:!0,dots:!0}},{breakpoint:600,settings:{slidesToShow:1,slidesToScroll:1}},{breakpoint:480,settings:{slidesToShow:1,slidesToScroll:1}}]})});
"use strict";!function(t,e,r){var n,o,i="click",u="data-mfb-toggle",c="data-mfb-state",a="open",f="closed",d="mfb-component__button--main";function l(t){return e.querySelectorAll("["+u+'="'+t+'"]')}function b(t){for(n=t.target;n&&!n.getAttribute(u);)if(!(n=n.parentNode))return;o=n.getAttribute(c)===a?f:a,n.setAttribute(c,o)}t.Modernizr&&Modernizr.touch&&function(t){for(var e=0,r=t.length;e<r;e++)t[e].setAttribute(u,i),t[e].setAttribute(c,f)}(l("hover")),function(t,e){for(var r=0,n=t.length;r<n;r++)t[r].querySelector("."+d).addEventListener(e,b,!1)}(l(i),"click")}(window,document);
"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(i){return typeof i}:function(i){return i&&"function"==typeof Symbol&&i.constructor===Symbol&&i!==Symbol.prototype?"symbol":typeof i};!function(i){"function"==typeof define&&define.amd?define(["jquery"],i):"undefined"!=typeof exports?module.exports=i(require("jquery")):i(jQuery)}(function(i){var e=window.Slick||{};(e=function(){var e=0;return function(t,o){var s,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:i(t),appendDots:i(t),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return i('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},i.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=i(t),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,s=i(t).data("slick")||{},n.options=i.extend({},n.defaults,o,s),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=i.proxy(n.autoPlay,n),n.autoPlayClear=i.proxy(n.autoPlayClear,n),n.autoPlayIterator=i.proxy(n.autoPlayIterator,n),n.changeSlide=i.proxy(n.changeSlide,n),n.clickHandler=i.proxy(n.clickHandler,n),n.selectHandler=i.proxy(n.selectHandler,n),n.setPosition=i.proxy(n.setPosition,n),n.swipeHandler=i.proxy(n.swipeHandler,n),n.dragHandler=i.proxy(n.dragHandler,n),n.keyHandler=i.proxy(n.keyHandler,n),n.instanceUid=e++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}}()).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},e.prototype.addSlide=e.prototype.slickAdd=function(e,t,o){var s=this;if("boolean"==typeof t)o=t,t=null;else if(t<0||t>=s.slideCount)return!1;s.unload(),"number"==typeof t?0===t&&0===s.$slides.length?i(e).appendTo(s.$slideTrack):o?i(e).insertBefore(s.$slides.eq(t)):i(e).insertAfter(s.$slides.eq(t)):!0===o?i(e).prependTo(s.$slideTrack):i(e).appendTo(s.$slideTrack),s.$slides=s.$slideTrack.children(this.options.slide),s.$slideTrack.children(this.options.slide).detach(),s.$slideTrack.append(s.$slides),s.$slides.each(function(e,t){i(t).attr("data-slick-index",e)}),s.$slidesCache=s.$slides,s.reinit()},e.prototype.animateHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.animate({height:e},i.options.speed)}},e.prototype.animateSlide=function(e,t){var o={},s=this;s.animateHeight(),!0===s.options.rtl&&!1===s.options.vertical&&(e=-e),!1===s.transformsEnabled?!1===s.options.vertical?s.$slideTrack.animate({left:e},s.options.speed,s.options.easing,t):s.$slideTrack.animate({top:e},s.options.speed,s.options.easing,t):!1===s.cssTransitions?(!0===s.options.rtl&&(s.currentLeft=-s.currentLeft),i({animStart:s.currentLeft}).animate({animStart:e},{duration:s.options.speed,easing:s.options.easing,step:function(i){i=Math.ceil(i),!1===s.options.vertical?(o[s.animType]="translate("+i+"px, 0px)",s.$slideTrack.css(o)):(o[s.animType]="translate(0px,"+i+"px)",s.$slideTrack.css(o))},complete:function(){t&&t.call()}})):(s.applyTransition(),e=Math.ceil(e),!1===s.options.vertical?o[s.animType]="translate3d("+e+"px, 0px, 0px)":o[s.animType]="translate3d(0px,"+e+"px, 0px)",s.$slideTrack.css(o),t&&setTimeout(function(){s.disableTransition(),t.call()},s.options.speed))},e.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e&&null!==e&&(e=i(e).not(this.$slider)),e},e.prototype.asNavFor=function(e){var t=this.getNavTarget();null!==t&&"object"===(void 0===t?"undefined":_typeof(t))&&t.each(function(){var t=i(this).slick("getSlick");t.unslicked||t.slideHandler(e,!0)})},e.prototype.applyTransition=function(i){var e=this,t={};!1===e.options.fade?t[e.transitionType]=e.transformType+" "+e.options.speed+"ms "+e.options.cssEase:t[e.transitionType]="opacity "+e.options.speed+"ms "+e.options.cssEase,!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.autoPlay=function(){var i=this;i.autoPlayClear(),i.slideCount>i.options.slidesToShow&&(i.autoPlayTimer=setInterval(i.autoPlayIterator,i.options.autoplaySpeed))},e.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},e.prototype.autoPlayIterator=function(){var i=this,e=i.currentSlide+i.options.slidesToScroll;i.paused||i.interrupted||i.focussed||(!1===i.options.infinite&&(1===i.direction&&i.currentSlide+1===i.slideCount-1?i.direction=0:0===i.direction&&(e=i.currentSlide-i.options.slidesToScroll,i.currentSlide-1==0&&(i.direction=1))),i.slideHandler(e))},e.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=i(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=i(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},e.prototype.buildDots=function(){var e,t,o=this;if(!0===o.options.dots){for(o.$slider.addClass("slick-dotted"),t=i("<ul />").addClass(o.options.dotsClass),e=0;e<=o.getDotCount();e+=1)t.append(i("<li />").append(o.options.customPaging.call(this,o,e)));o.$dots=t.appendTo(o.options.appendDots),o.$dots.find("li").first().addClass("slick-active")}},e.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){i(t).attr("data-slick-index",e).data("originalStyling",i(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?i('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),i("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},e.prototype.buildRows=function(){var i,e,t,o,s,n,r,l=this;if(o=document.createDocumentFragment(),n=l.$slider.children(),l.options.rows>1){for(r=l.options.slidesPerRow*l.options.rows,s=Math.ceil(n.length/r),i=0;i<s;i++){var d=document.createElement("div");for(e=0;e<l.options.rows;e++){var a=document.createElement("div");for(t=0;t<l.options.slidesPerRow;t++){var c=i*r+(e*l.options.slidesPerRow+t);n.get(c)&&a.appendChild(n.get(c))}d.appendChild(a)}o.appendChild(d)}l.$slider.empty().append(o),l.$slider.children().children().children().css({width:100/l.options.slidesPerRow+"%",display:"inline-block"})}},e.prototype.checkResponsive=function(e,t){var o,s,n,r=this,l=!1,d=r.$slider.width(),a=window.innerWidth||i(window).width();if("window"===r.respondTo?n=a:"slider"===r.respondTo?n=d:"min"===r.respondTo&&(n=Math.min(a,d)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){s=null;for(o in r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(!1===r.originalSettings.mobileFirst?n<r.breakpoints[o]&&(s=r.breakpoints[o]):n>r.breakpoints[o]&&(s=r.breakpoints[o]));null!==s?null!==r.activeBreakpoint?(s!==r.activeBreakpoint||t)&&(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e),l=s),e||!1===l||r.$slider.trigger("breakpoint",[r,l])}},e.prototype.changeSlide=function(e,t){var o,s,n=this,r=i(e.currentTarget);switch(r.is("a")&&e.preventDefault(),r.is("li")||(r=r.closest("li")),o=n.slideCount%n.options.slidesToScroll!=0?0:(n.slideCount-n.currentSlide)%n.options.slidesToScroll,e.data.message){case"previous":s=0===o?n.options.slidesToScroll:n.options.slidesToShow-o,n.slideCount>n.options.slidesToShow&&n.slideHandler(n.currentSlide-s,!1,t);break;case"next":s=0===o?n.options.slidesToScroll:o,n.slideCount>n.options.slidesToShow&&n.slideHandler(n.currentSlide+s,!1,t);break;case"index":var l=0===e.data.index?0:e.data.index||r.index()*n.options.slidesToScroll;n.slideHandler(n.checkNavigable(l),!1,t),r.children().trigger("focus");break;default:return}},e.prototype.checkNavigable=function(i){var e,t;if(t=0,i>(e=this.getNavigableIndexes())[e.length-1])i=e[e.length-1];else for(var o in e){if(i<e[o]){i=t;break}t=e[o]}return i},e.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(i("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",i.proxy(e.interrupt,e,!0)).off("mouseleave.slick",i.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),i(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().off("click.slick",e.selectHandler),i(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),i(window).off("resize.slick.slick-"+e.instanceUid,e.resize),i("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),i(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},e.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.cleanUpRows=function(){var i;this.options.rows>1&&((i=this.$slides.children().children()).removeAttr("style"),this.$slider.empty().append(i))},e.prototype.clickHandler=function(i){!1===this.shouldClick&&(i.stopImmediatePropagation(),i.stopPropagation(),i.preventDefault())},e.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),i(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){i(this).attr("style",i(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},e.prototype.disableTransition=function(i){var e={};e[this.transitionType]="",!1===this.options.fade?this.$slideTrack.css(e):this.$slides.eq(i).css(e)},e.prototype.fadeSlide=function(i,e){var t=this;!1===t.cssTransitions?(t.$slides.eq(i).css({zIndex:t.options.zIndex}),t.$slides.eq(i).animate({opacity:1},t.options.speed,t.options.easing,e)):(t.applyTransition(i),t.$slides.eq(i).css({opacity:1,zIndex:t.options.zIndex}),e&&setTimeout(function(){t.disableTransition(i),e.call()},t.options.speed))},e.prototype.fadeSlideOut=function(i){var e=this;!1===e.cssTransitions?e.$slides.eq(i).animate({opacity:0,zIndex:e.options.zIndex-2},e.options.speed,e.options.easing):(e.applyTransition(i),e.$slides.eq(i).css({opacity:0,zIndex:e.options.zIndex-2}))},e.prototype.filterSlides=e.prototype.slickFilter=function(i){var e=this;null!==i&&(e.$slidesCache=e.$slides,e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.filter(i).appendTo(e.$slideTrack),e.reinit())},e.prototype.focusHandler=function(){var e=this;e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(t){t.stopImmediatePropagation();var o=i(this);setTimeout(function(){e.options.pauseOnFocus&&(e.focussed=o.is(":focus"),e.autoPlay())},0)})},e.prototype.getCurrent=e.prototype.slickCurrentSlide=function(){return this.currentSlide},e.prototype.getDotCount=function(){var i=this,e=0,t=0,o=0;if(!0===i.options.infinite)if(i.slideCount<=i.options.slidesToShow)++o;else for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else if(!0===i.options.centerMode)o=i.slideCount;else if(i.options.asNavFor)for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else o=1+Math.ceil((i.slideCount-i.options.slidesToShow)/i.options.slidesToScroll);return o-1},e.prototype.getLeft=function(i){var e,t,o,s=this,n=0;return s.slideOffset=0,t=s.$slides.first().outerHeight(!0),!0===s.options.infinite?(s.slideCount>s.options.slidesToShow&&(s.slideOffset=s.slideWidth*s.options.slidesToShow*-1,n=t*s.options.slidesToShow*-1),s.slideCount%s.options.slidesToScroll!=0&&i+s.options.slidesToScroll>s.slideCount&&s.slideCount>s.options.slidesToShow&&(i>s.slideCount?(s.slideOffset=(s.options.slidesToShow-(i-s.slideCount))*s.slideWidth*-1,n=(s.options.slidesToShow-(i-s.slideCount))*t*-1):(s.slideOffset=s.slideCount%s.options.slidesToScroll*s.slideWidth*-1,n=s.slideCount%s.options.slidesToScroll*t*-1))):i+s.options.slidesToShow>s.slideCount&&(s.slideOffset=(i+s.options.slidesToShow-s.slideCount)*s.slideWidth,n=(i+s.options.slidesToShow-s.slideCount)*t),s.slideCount<=s.options.slidesToShow&&(s.slideOffset=0,n=0),!0===s.options.centerMode&&s.slideCount<=s.options.slidesToShow?s.slideOffset=s.slideWidth*Math.floor(s.options.slidesToShow)/2-s.slideWidth*s.slideCount/2:!0===s.options.centerMode&&!0===s.options.infinite?s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)-s.slideWidth:!0===s.options.centerMode&&(s.slideOffset=0,s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)),e=!1===s.options.vertical?i*s.slideWidth*-1+s.slideOffset:i*t*-1+n,!0===s.options.variableWidth&&(o=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(i):s.$slideTrack.children(".slick-slide").eq(i+s.options.slidesToShow),e=!0===s.options.rtl?o[0]?-1*(s.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===s.options.centerMode&&(o=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(i):s.$slideTrack.children(".slick-slide").eq(i+s.options.slidesToShow+1),e=!0===s.options.rtl?o[0]?-1*(s.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,e+=(s.$list.width()-o.outerWidth())/2)),e},e.prototype.getOption=e.prototype.slickGetOption=function(i){return this.options[i]},e.prototype.getNavigableIndexes=function(){var i,e=this,t=0,o=0,s=[];for(!1===e.options.infinite?i=e.slideCount:(t=-1*e.options.slidesToScroll,o=-1*e.options.slidesToScroll,i=2*e.slideCount);t<i;)s.push(t),t=o+e.options.slidesToScroll,o+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return s},e.prototype.getSlick=function(){return this},e.prototype.getSlideCount=function(){var e,t,o=this;return t=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each(function(s,n){if(n.offsetLeft-t+i(n).outerWidth()/2>-1*o.swipeLeft)return e=n,!1}),Math.abs(i(e).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},e.prototype.goTo=e.prototype.slickGoTo=function(i,e){this.changeSlide({data:{message:"index",index:parseInt(i)}},e)},e.prototype.init=function(e){var t=this;i(t.$slider).hasClass("slick-initialized")||(i(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},e.prototype.initADA=function(){var e=this,t=Math.ceil(e.slideCount/e.options.slidesToShow),o=e.getNavigableIndexes().filter(function(i){return i>=0&&i<e.slideCount});e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==e.$dots&&(e.$slides.not(e.$slideTrack.find(".slick-cloned")).each(function(t){var s=o.indexOf(t);i(this).attr({role:"tabpanel",id:"slick-slide"+e.instanceUid+t,tabindex:-1}),-1!==s&&i(this).attr({"aria-describedby":"slick-slide-control"+e.instanceUid+s})}),e.$dots.attr("role","tablist").find("li").each(function(s){var n=o[s];i(this).attr({role:"presentation"}),i(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+e.instanceUid+s,"aria-controls":"slick-slide"+e.instanceUid+n,"aria-label":s+1+" of "+t,"aria-selected":null,tabindex:"-1"})}).eq(e.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var s=e.currentSlide,n=s+e.options.slidesToShow;s<n;s++)e.$slides.eq(s).attr("tabindex",0);e.activateADA()},e.prototype.initArrowEvents=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},i.changeSlide),i.$nextArrow.off("click.slick").on("click.slick",{message:"next"},i.changeSlide),!0===i.options.accessibility&&(i.$prevArrow.on("keydown.slick",i.keyHandler),i.$nextArrow.on("keydown.slick",i.keyHandler)))},e.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(i("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&i("li",e.$dots).on("mouseenter.slick",i.proxy(e.interrupt,e,!0)).on("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",i.proxy(e.interrupt,e,!1)))},e.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),i(document).on(e.visibilityChange,i.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),i(window).on("orientationchange.slick.slick-"+e.instanceUid,i.proxy(e.orientationChange,e)),i(window).on("resize.slick.slick-"+e.instanceUid,i.proxy(e.resize,e)),i("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),i(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),i(e.setPosition)},e.prototype.initUI=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.show(),i.$nextArrow.show()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.show()},e.prototype.keyHandler=function(i){var e=this;i.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===i.keyCode&&!0===e.options.accessibility?e.changeSlide({data:{message:!0===e.options.rtl?"next":"previous"}}):39===i.keyCode&&!0===e.options.accessibility&&e.changeSlide({data:{message:!0===e.options.rtl?"previous":"next"}}))},e.prototype.lazyLoad=function(){var e,t,o,s=this;function n(e){i("img[data-lazy]",e).each(function(){var e=i(this),t=i(this).attr("data-lazy"),o=i(this).attr("data-srcset"),n=i(this).attr("data-sizes")||s.$slider.attr("data-sizes"),r=document.createElement("img");r.onload=function(){e.animate({opacity:0},100,function(){o&&(e.attr("srcset",o),n&&e.attr("sizes",n)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),s.$slider.trigger("lazyLoaded",[s,e,t])})},r.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),s.$slider.trigger("lazyLoadError",[s,e,t])},r.src=t})}if(!0===s.options.centerMode?!0===s.options.infinite?o=(t=s.currentSlide+(s.options.slidesToShow/2+1))+s.options.slidesToShow+2:(t=Math.max(0,s.currentSlide-(s.options.slidesToShow/2+1)),o=s.options.slidesToShow/2+1+2+s.currentSlide):(t=s.options.infinite?s.options.slidesToShow+s.currentSlide:s.currentSlide,o=Math.ceil(t+s.options.slidesToShow),!0===s.options.fade&&(t>0&&t--,o<=s.slideCount&&o++)),e=s.$slider.find(".slick-slide").slice(t,o),"anticipated"===s.options.lazyLoad)for(var r=t-1,l=o,d=s.$slider.find(".slick-slide"),a=0;a<s.options.slidesToScroll;a++)r<0&&(r=s.slideCount-1),e=(e=e.add(d.eq(r))).add(d.eq(l)),r--,l++;n(e),s.slideCount<=s.options.slidesToShow?n(s.$slider.find(".slick-slide")):s.currentSlide>=s.slideCount-s.options.slidesToShow?n(s.$slider.find(".slick-cloned").slice(0,s.options.slidesToShow)):0===s.currentSlide&&n(s.$slider.find(".slick-cloned").slice(-1*s.options.slidesToShow))},e.prototype.loadSlider=function(){var i=this;i.setPosition(),i.$slideTrack.css({opacity:1}),i.$slider.removeClass("slick-loading"),i.initUI(),"progressive"===i.options.lazyLoad&&i.progressiveLazyLoad()},e.prototype.next=e.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},e.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},e.prototype.pause=e.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},e.prototype.play=e.prototype.slickPlay=function(){var i=this;i.autoPlay(),i.options.autoplay=!0,i.paused=!1,i.focussed=!1,i.interrupted=!1},e.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.autoplay||i(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},e.prototype.prev=e.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},e.prototype.preventDefault=function(i){i.preventDefault()},e.prototype.progressiveLazyLoad=function(e){e=e||1;var t,o,s,n,r,l=this,d=i("img[data-lazy]",l.$slider);d.length?(t=d.first(),o=t.attr("data-lazy"),s=t.attr("data-srcset"),n=t.attr("data-sizes")||l.$slider.attr("data-sizes"),(r=document.createElement("img")).onload=function(){s&&(t.attr("srcset",s),n&&t.attr("sizes",n)),t.attr("src",o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===l.options.adaptiveHeight&&l.setPosition(),l.$slider.trigger("lazyLoaded",[l,t,o]),l.progressiveLazyLoad()},r.onerror=function(){e<3?setTimeout(function(){l.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),l.$slider.trigger("lazyLoadError",[l,t,o]),l.progressiveLazyLoad())},r.src=o):l.$slider.trigger("allImagesLoaded",[l])},e.prototype.refresh=function(e){var t,o,s=this;o=s.slideCount-s.options.slidesToShow,!s.options.infinite&&s.currentSlide>o&&(s.currentSlide=o),s.slideCount<=s.options.slidesToShow&&(s.currentSlide=0),t=s.currentSlide,s.destroy(!0),i.extend(s,s.initials,{currentSlide:t}),s.init(),e||s.changeSlide({data:{message:"index",index:t}},!1)},e.prototype.registerBreakpoints=function(){var e,t,o,s=this,n=s.options.responsive||null;if("array"===i.type(n)&&n.length){s.respondTo=s.options.respondTo||"window";for(e in n)if(o=s.breakpoints.length-1,n.hasOwnProperty(e)){for(t=n[e].breakpoint;o>=0;)s.breakpoints[o]&&s.breakpoints[o]===t&&s.breakpoints.splice(o,1),o--;s.breakpoints.push(t),s.breakpointSettings[t]=n[e].settings}s.breakpoints.sort(function(i,e){return s.options.mobileFirst?i-e:e-i})}},e.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},e.prototype.resize=function(){var e=this;i(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=i(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},e.prototype.removeSlide=e.prototype.slickRemove=function(i,e,t){var o=this;if(i="boolean"==typeof i?!0===(e=i)?0:o.slideCount-1:!0===e?--i:i,o.slideCount<1||i<0||i>o.slideCount-1)return!1;o.unload(),!0===t?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(i).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},e.prototype.setCSS=function(i){var e,t,o=this,s={};!0===o.options.rtl&&(i=-i),e="left"==o.positionProp?Math.ceil(i)+"px":"0px",t="top"==o.positionProp?Math.ceil(i)+"px":"0px",s[o.positionProp]=i,!1===o.transformsEnabled?o.$slideTrack.css(s):(s={},!1===o.cssTransitions?(s[o.animType]="translate("+e+", "+t+")",o.$slideTrack.css(s)):(s[o.animType]="translate3d("+e+", "+t+", 0px)",o.$slideTrack.css(s)))},e.prototype.setDimensions=function(){var i=this;!1===i.options.vertical?!0===i.options.centerMode&&i.$list.css({padding:"0px "+i.options.centerPadding}):(i.$list.height(i.$slides.first().outerHeight(!0)*i.options.slidesToShow),!0===i.options.centerMode&&i.$list.css({padding:i.options.centerPadding+" 0px"})),i.listWidth=i.$list.width(),i.listHeight=i.$list.height(),!1===i.options.vertical&&!1===i.options.variableWidth?(i.slideWidth=Math.ceil(i.listWidth/i.options.slidesToShow),i.$slideTrack.width(Math.ceil(i.slideWidth*i.$slideTrack.children(".slick-slide").length))):!0===i.options.variableWidth?i.$slideTrack.width(5e3*i.slideCount):(i.slideWidth=Math.ceil(i.listWidth),i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0)*i.$slideTrack.children(".slick-slide").length)));var e=i.$slides.first().outerWidth(!0)-i.$slides.first().width();!1===i.options.variableWidth&&i.$slideTrack.children(".slick-slide").width(i.slideWidth-e)},e.prototype.setFade=function(){var e,t=this;t.$slides.each(function(o,s){e=t.slideWidth*o*-1,!0===t.options.rtl?i(s).css({position:"relative",right:e,top:0,zIndex:t.options.zIndex-2,opacity:0}):i(s).css({position:"relative",left:e,top:0,zIndex:t.options.zIndex-2,opacity:0})}),t.$slides.eq(t.currentSlide).css({zIndex:t.options.zIndex-1,opacity:1})},e.prototype.setHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.css("height",e)}},e.prototype.setOption=e.prototype.slickSetOption=function(){var e,t,o,s,n,r=this,l=!1;if("object"===i.type(arguments[0])?(o=arguments[0],l=arguments[1],n="multiple"):"string"===i.type(arguments[0])&&(o=arguments[0],s=arguments[1],l=arguments[2],"responsive"===arguments[0]&&"array"===i.type(arguments[1])?n="responsive":void 0!==arguments[1]&&(n="single")),"single"===n)r.options[o]=s;else if("multiple"===n)i.each(o,function(i,e){r.options[i]=e});else if("responsive"===n)for(t in s)if("array"!==i.type(r.options.responsive))r.options.responsive=[s[t]];else{for(e=r.options.responsive.length-1;e>=0;)r.options.responsive[e].breakpoint===s[t].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(s[t])}l&&(r.unload(),r.reinit())},e.prototype.setPosition=function(){var i=this;i.setDimensions(),i.setHeight(),!1===i.options.fade?i.setCSS(i.getLeft(i.currentSlide)):i.setFade(),i.$slider.trigger("setPosition",[i])},e.prototype.setProps=function(){var i=this,e=document.body.style;i.positionProp=!0===i.options.vertical?"top":"left","top"===i.positionProp?i.$slider.addClass("slick-vertical"):i.$slider.removeClass("slick-vertical"),void 0===e.WebkitTransition&&void 0===e.MozTransition&&void 0===e.msTransition||!0===i.options.useCSS&&(i.cssTransitions=!0),i.options.fade&&("number"==typeof i.options.zIndex?i.options.zIndex<3&&(i.options.zIndex=3):i.options.zIndex=i.defaults.zIndex),void 0!==e.OTransform&&(i.animType="OTransform",i.transformType="-o-transform",i.transitionType="OTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.MozTransform&&(i.animType="MozTransform",i.transformType="-moz-transform",i.transitionType="MozTransition",void 0===e.perspectiveProperty&&void 0===e.MozPerspective&&(i.animType=!1)),void 0!==e.webkitTransform&&(i.animType="webkitTransform",i.transformType="-webkit-transform",i.transitionType="webkitTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.msTransform&&(i.animType="msTransform",i.transformType="-ms-transform",i.transitionType="msTransition",void 0===e.msTransform&&(i.animType=!1)),void 0!==e.transform&&!1!==i.animType&&(i.animType="transform",i.transformType="transform",i.transitionType="transition"),i.transformsEnabled=i.options.useTransform&&null!==i.animType&&!1!==i.animType},e.prototype.setSlideClasses=function(i){var e,t,o,s,n=this;t=n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),n.$slides.eq(i).addClass("slick-current"),!0===n.options.centerMode?(e=Math.floor(n.options.slidesToShow/2),!0===n.options.infinite&&(i>=e&&i<=n.slideCount-1-e?n.$slides.slice(i-e,i+e+1).addClass("slick-active").attr("aria-hidden","false"):(o=n.options.slidesToShow+i,t.slice(o-e+1,o+e+2).addClass("slick-active").attr("aria-hidden","false")),0===i?t.eq(t.length-1-n.options.slidesToShow).addClass("slick-center"):i===n.slideCount-1&&t.eq(n.options.slidesToShow).addClass("slick-center")),n.$slides.eq(i).addClass("slick-center")):i>=0&&i<=n.slideCount-n.options.slidesToShow?n.$slides.slice(i,i+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):t.length<=n.options.slidesToShow?t.addClass("slick-active").attr("aria-hidden","false"):(s=n.slideCount%n.options.slidesToShow,o=!0===n.options.infinite?n.options.slidesToShow+i:i,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-i<n.options.slidesToShow?t.slice(o-(n.options.slidesToShow-s),o+s).addClass("slick-active").attr("aria-hidden","false"):t.slice(o,o+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false")),"ondemand"!==n.options.lazyLoad&&"anticipated"!==n.options.lazyLoad||n.lazyLoad()},e.prototype.setupInfinite=function(){var e,t,o,s=this;if(!0===s.options.fade&&(s.options.centerMode=!1),!0===s.options.infinite&&!1===s.options.fade&&(t=null,s.slideCount>s.options.slidesToShow)){for(o=!0===s.options.centerMode?s.options.slidesToShow+1:s.options.slidesToShow,e=s.slideCount;e>s.slideCount-o;e-=1)t=e-1,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");for(e=0;e<o+s.slideCount;e+=1)t=e,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");s.$slideTrack.find(".slick-cloned").find("[id]").each(function(){i(this).attr("id","")})}},e.prototype.interrupt=function(i){i||this.autoPlay(),this.interrupted=i},e.prototype.selectHandler=function(e){var t=i(e.target).is(".slick-slide")?i(e.target):i(e.target).parents(".slick-slide"),o=parseInt(t.attr("data-slick-index"));o||(o=0),this.slideCount<=this.options.slidesToShow?this.slideHandler(o,!1,!0):this.slideHandler(o)},e.prototype.slideHandler=function(i,e,t){var o,s,n,r,l,d,a=this;if(e=e||!1,!(!0===a.animating&&!0===a.options.waitForAnimate||!0===a.options.fade&&a.currentSlide===i))if(!1===e&&a.asNavFor(i),o=i,l=a.getLeft(o),r=a.getLeft(a.currentSlide),a.currentLeft=null===a.swipeLeft?r:a.swipeLeft,!1===a.options.infinite&&!1===a.options.centerMode&&(i<0||i>a.getDotCount()*a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else if(!1===a.options.infinite&&!0===a.options.centerMode&&(i<0||i>a.slideCount-a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else{if(a.options.autoplay&&clearInterval(a.autoPlayTimer),s=o<0?a.slideCount%a.options.slidesToScroll!=0?a.slideCount-a.slideCount%a.options.slidesToScroll:a.slideCount+o:o>=a.slideCount?a.slideCount%a.options.slidesToScroll!=0?0:o-a.slideCount:o,a.animating=!0,a.$slider.trigger("beforeChange",[a,a.currentSlide,s]),n=a.currentSlide,a.currentSlide=s,a.setSlideClasses(a.currentSlide),a.options.asNavFor&&(d=(d=a.getNavTarget()).slick("getSlick")).slideCount<=d.options.slidesToShow&&d.setSlideClasses(a.currentSlide),a.updateDots(),a.updateArrows(),!0===a.options.fade)return!0!==t?(a.fadeSlideOut(n),a.fadeSlide(s,function(){a.postSlide(s)})):a.postSlide(s),void a.animateHeight();!0!==t?a.animateSlide(l,function(){a.postSlide(s)}):a.postSlide(s)}},e.prototype.startLoad=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.hide(),i.$nextArrow.hide()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.hide(),i.$slider.addClass("slick-loading")},e.prototype.swipeDirection=function(){var i,e,t,o,s=this;return i=s.touchObject.startX-s.touchObject.curX,e=s.touchObject.startY-s.touchObject.curY,t=Math.atan2(e,i),(o=Math.round(180*t/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&o>=0?!1===s.options.rtl?"left":"right":o<=360&&o>=315?!1===s.options.rtl?"left":"right":o>=135&&o<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?o>=35&&o<=135?"down":"up":"vertical"},e.prototype.swipeEnd=function(i){var e,t,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(t=o.swipeDirection()){case"left":case"down":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=t&&(o.slideHandler(e),o.touchObject={},o.$slider.trigger("swipe",[o,t]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},e.prototype.swipeHandler=function(i){var e=this;if(!(!1===e.options.swipe||"ontouchend"in document&&!1===e.options.swipe||!1===e.options.draggable&&-1!==i.type.indexOf("mouse")))switch(e.touchObject.fingerCount=i.originalEvent&&void 0!==i.originalEvent.touches?i.originalEvent.touches.length:1,e.touchObject.minSwipe=e.listWidth/e.options.touchThreshold,!0===e.options.verticalSwiping&&(e.touchObject.minSwipe=e.listHeight/e.options.touchThreshold),i.data.action){case"start":e.swipeStart(i);break;case"move":e.swipeMove(i);break;case"end":e.swipeEnd(i)}},e.prototype.swipeMove=function(i){var e,t,o,s,n,r,l=this;return n=void 0!==i.originalEvent?i.originalEvent.touches:null,!(!l.dragging||l.scrolling||n&&1!==n.length)&&(e=l.getLeft(l.currentSlide),l.touchObject.curX=void 0!==n?n[0].pageX:i.clientX,l.touchObject.curY=void 0!==n?n[0].pageY:i.clientY,l.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(l.touchObject.curX-l.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(l.touchObject.curY-l.touchObject.startY,2))),!l.options.verticalSwiping&&!l.swiping&&r>4?(l.scrolling=!0,!1):(!0===l.options.verticalSwiping&&(l.touchObject.swipeLength=r),t=l.swipeDirection(),void 0!==i.originalEvent&&l.touchObject.swipeLength>4&&(l.swiping=!0,i.preventDefault()),s=(!1===l.options.rtl?1:-1)*(l.touchObject.curX>l.touchObject.startX?1:-1),!0===l.options.verticalSwiping&&(s=l.touchObject.curY>l.touchObject.startY?1:-1),o=l.touchObject.swipeLength,l.touchObject.edgeHit=!1,!1===l.options.infinite&&(0===l.currentSlide&&"right"===t||l.currentSlide>=l.getDotCount()&&"left"===t)&&(o=l.touchObject.swipeLength*l.options.edgeFriction,l.touchObject.edgeHit=!0),!1===l.options.vertical?l.swipeLeft=e+o*s:l.swipeLeft=e+o*(l.$list.height()/l.listWidth)*s,!0===l.options.verticalSwiping&&(l.swipeLeft=e+o*s),!0!==l.options.fade&&!1!==l.options.touchMove&&(!0===l.animating?(l.swipeLeft=null,!1):void l.setCSS(l.swipeLeft))))},e.prototype.swipeStart=function(i){var e,t=this;if(t.interrupted=!0,1!==t.touchObject.fingerCount||t.slideCount<=t.options.slidesToShow)return t.touchObject={},!1;void 0!==i.originalEvent&&void 0!==i.originalEvent.touches&&(e=i.originalEvent.touches[0]),t.touchObject.startX=t.touchObject.curX=void 0!==e?e.pageX:i.clientX,t.touchObject.startY=t.touchObject.curY=void 0!==e?e.pageY:i.clientY,t.dragging=!0},e.prototype.unfilterSlides=e.prototype.slickUnfilter=function(){var i=this;null!==i.$slidesCache&&(i.unload(),i.$slideTrack.children(this.options.slide).detach(),i.$slidesCache.appendTo(i.$slideTrack),i.reinit())},e.prototype.unload=function(){var e=this;i(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},e.prototype.unslick=function(i){this.$slider.trigger("unslick",[this,i]),this.destroy()},e.prototype.updateArrows=function(){var i=this;Math.floor(i.options.slidesToShow/2),!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&!i.options.infinite&&(i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===i.currentSlide?(i.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-i.options.slidesToShow&&!1===i.options.centerMode?(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-1&&!0===i.options.centerMode&&(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},e.prototype.updateDots=function(){var i=this;null!==i.$dots&&(i.$dots.find("li").removeClass("slick-active").end(),i.$dots.find("li").eq(Math.floor(i.currentSlide/i.options.slidesToScroll)).addClass("slick-active"))},e.prototype.visibility=function(){this.options.autoplay&&(document[this.hidden]?this.interrupted=!0:this.interrupted=!1)},i.fn.slick=function(){var i,t,o=this,s=arguments[0],n=Array.prototype.slice.call(arguments,1),r=o.length;for(i=0;i<r;i++)if("object"==(void 0===s?"undefined":_typeof(s))||void 0===s?o[i].slick=new e(o[i],s):t=o[i].slick[s].apply(o[i].slick,n),void 0!==t)return t;return o}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
